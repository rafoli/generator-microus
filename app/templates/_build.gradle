buildscript {
	
	ext {
		springBootVersion = '1.3.1.RELEASE'
		springDependencyManagementVersion = '0.4.0.RELEASE'
	}

	repositories {
		mavenCentral()
		jcenter()
	}

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
    }
}

ext {
	springBootVersion = '1.3.1.RELEASE'
	springCloudVersion = 'Angel.SR4'
	junitVersion = '4.12'
	springAdminVersion = '1.3.2'
	swaggerVersion = '2.3.1'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'
apply plugin: 'io.spring.dependency-management'
group = '<%= props.packageName %>'
version = '<%= props.versionName %>'

repositories {
	mavenCentral()
	jcenter()
}

dependencyManagement {
	imports {
	  mavenBom "org.springframework.cloud:spring-cloud-starter-parent:${springCloudVersion}"
	  mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
	}
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.cloud:spring-cloud-starter-config'
    compile 'org.springframework.cloud:spring-cloud-starter-eureka'
    <% if (props.microserviceType.indexOf('springAdmin') > -1) { %>
    compile "de.codecentric:spring-boot-admin-server:${springAdminVersion}"
	compile "de.codecentric:spring-boot-admin-server-ui:${springAdminVersion}"<% } %>
    compile 'org.jolokia:jolokia-core'

	testCompile "junit:junit:${junitVersion}"

}

jar {
	baseName = '<%= props.context %>'
}

mainClassName = '<%= props.packageName %>.<%= props.appName %>Application'

sourceCompatibility = 1.8
targetCompatibility = 1.8


task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}